{
	"name": "Azure Functions + Terraform",
	"dockerFile": "Dockerfile",
	// Use 'settings' to set *default* container specific settings.json values on container create. 
	// You can edit these settings after create using File > Preferences > Settings > Remote.
	"settings": {
		"terminal.integrated.profiles.linux": {
			"bash": {
				"path": "/bin/bash"
			}
		},
		"terraform.languageServer": {
			"enabled": true
		},
		"terraform.templateDirectory": "infrastructure/terraform"
	},
	// Use 'appPort' to create a container with published ports. If the port isn't working, be sure
	// your server accepts connections from all interfaces (0.0.0.0 or '*'), not just localhost.
	"appPort": [
		7071
	],
	// [Optional] To reuse of your local HTTPS dev cert, first export it locally using this command: 
	//  * Windows PowerShell:
	//     dotnet dev-certs https --trust; dotnet dev-certs https -ep "$env:USERPROFILE/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere" 
	//  * macOS/Linux terminal:
	//     dotnet dev-certs https --trust; dotnet dev-certs https -ep "${HOME}/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	//
	// Next, after running the command above, uncomment lines in the 'mounts' and 'remoteEnv' lines below, 
	// and open / rebuild the container so the settings take effect.
	//
	"mounts": [
		// "source=${env:HOME}${env:USERPROFILE}/.aspnet/https,target=/home/vscode/.aspnet/https,type=bind",
		"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
	],
	// Uncomment the next line to have VS Code connect as an existing non-root user in the container. 
	// On Linux, by default, the container user's UID/GID will be updated to match your local user. See
	// https://aka.ms/vscode-remote/containers/non-root for details on adding a non-root user if none exist.
	// "remoteUser": "vscode",
	// Add the IDs of extensions you want installed when the container is created in the array below.
	"extensions": [
		"hashicorp.terraform",
		"ms-azuretools.vscode-azureterraform",
		"ms-azuretools.vscode-docker",
		"ms-azuretools.vscode-azurestorage",
		"ms-azuretools.vscode-azureeventgrid",
		"ms-azuretools.vscode-azurefunctions",
		"ms-azure-devops.azure-pipelines",
		"ms-vscode.azurecli",
		"ms-vscode.azure-account",
		"ms-dotnettools.csharp"
	]
}